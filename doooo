getgenv().SecureMode = true

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ðŸ‘‘ Darkscript hub ðŸ‘‘",
   LoadingTitle = "Dark Hub",
   LoadingSubtitle = "by Dark",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Dark Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "ðŸ¤‘ Dark hub ðŸ¤‘",
      Subtitle = "Join discord for key",
      Note = "No method of obtaining the key is provided",
      FileName = "Dark hub key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/NwvpGnbM"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local DarkTab = Window:CreateTab("ðŸŒŒ Dark ðŸŒŒ", 4483362458) -- Title, Image
local Section = DarkTab:CreateSection("ðŸŒŒ Dark ðŸŒŒ")

local Button = DarkTab:CreateButton({
   Name = "Huge games",
   Callback = function()
   getgenv().AuthKey = "HUGE_FMrIYS221WC0"
getgenv().LoadSettings = {
    Example_Setting = Example_Value
}
loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/1c2273a86dbf2e8469b442e55882aa47.lua"))()
   end,
})

local Button = DarkTab:CreateButton({
   Name = "ðŸ’¤ Anti afk ðŸ’¤",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/Darks-scripts/anti-afk-/main/darkscripts"))()
   end,
})

local Button = DarkTab:CreateButton({
   Name = "â™¾ infinity yeild â™¾",
   Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})

local Button = DarkTab:CreateButton({
   Name = "â™¾ anti lag â™¾",
   Callback = function()
    game.Lighting.FogEnd = 9999999999 -- stops fog (annoying)
	wait(1)
	for i,v in pairs(game:GetService("Lighting"):GetChildren()) do
        if v:IsA("PostEffect") then
            v:Destroy()
        end
	    end
	wait(1)
	game.Lighting.Blur.Size = 0 -- stops blur (cancer)
   end,
})

local  MainTab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image
local Section =  MainTab:CreateSection("Section Example")

local Toggle = MainTab:CreateToggle({
   Name = "autobuyequip1",
   CurrentValue = true,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   autoBreakEquipSlotsMachine = Value
    while autoBreakEquipSlotsMachine and task.wait() do
    local args = {
    [1] = 1
}

game:GetService("ReplicatedStorage").Network.EquipSlotsMachine_RequestPurchase:InvokeServer(unpack(args))
            end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "autobuyequip1",
   CurrentValue = true,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   autoBreakEquipSlotsMachine = Value
    while autoBreakEquipSlotsMachine and task.wait() do
    local args = {
    [1] = 2
}

game:GetService("ReplicatedStorage").Network.EquipSlotsMachine_RequestPurchase:InvokeServer(unpack(args))
            end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "autobuyequip1",
   CurrentValue = true,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   autoBreakEquipSlotsMachine = Value
    while autoBreakEquipSlotsMachine and task.wait() do
    local args = {
    [1] = 3
}

game:GetService("ReplicatedStorage").Network.EquipSlotsMachine_RequestPurchase:InvokeServer(unpack(args))
            end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "autobuyequip1",
   CurrentValue = true,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   autoBreakEquipSlotsMachine = Value
    while autoBreakEquipSlotsMachine and task.wait() do
    local args = {
    [1] = 4
}

game:GetService("ReplicatedStorage").Network.EquipSlotsMachine_RequestPurchase:InvokeServer(unpack(args))
            end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "autobuyequip1",
   CurrentValue = true,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   autoBreakEquipSlotsMachine = Value
    while autoBreakEquipSlotsMachine and task.wait() do
    local args = {
    [1] = 5
}

game:GetService("ReplicatedStorage").Network.EquipSlotsMachine_RequestPurchase:InvokeServer(unpack(args))
            end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "autobuyequip1",
   CurrentValue = true,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   autoBreakEquipSlotsMachine = Value
    while autoBreakEquipSlotsMachine and task.wait() do
    local args = {
    [1] = 6
}

game:GetService("ReplicatedStorage").Network.EquipSlotsMachine_RequestPurchase:InvokeServer(unpack(args))
            end
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "autobuyequip1",
   CurrentValue = true,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   autoBreakEquipSlotsMachine = Value
    while autoBreakEquipSlotsMachine and task.wait() do
    local args = {
    [1] = 7
}

game:GetService("ReplicatedStorage").Network.EquipSlotsMachine_RequestPurchase:InvokeServer(unpack(args))
            end
   end,
})
